#
# Copyright 2019 wjybxx
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# 由于使用的通用的ConfigLoader进行加载，因此可以使用本地文件覆盖jar包中的配置，注意查看日志中打印的文件路径

# 内网ip作为备选项，当发现自动查找不成功时，可以用配置替代
# localIp=192.168.x.x
# 外网ip
# outerIp=192.168.x.x

# 每一个NetEventLoop的netty IO线程数(workerGroup)
nettyIOThreadNum=8


# 请求建立连接阶段最大尝试次数
connectMaxTryTimes=5
# 等待连接建立的超时时长(毫秒) - socket建立成功的时长
connectTimeout=5000
# 等待服务器的验证结果超时时长(毫秒) - 即：发起一个连接请求后，如果10S内收不到响应，则再次尝试重连。
waitVerifyResultTimeout=10000
# 消息包超时时长(毫秒)(即一个包5S内得不到服务器确认，则发起重连请求，它决定什么时候发起重连，因此应该稍微大一点)
ackTimeout=5000

# 会话超时时间(秒)，当连接的接收方在指定时间内未收到连接的发起方的任何消息时，该session会被删除
sessionTimeout=60

# 服务器(连接的接收方)为每个客户端缓存的消息数上限(未发送的+未确认的) 缓存过多的话服务器压力会比较大
serverMaxCacheNum=200
# 客户端(连接的发起方)缓存的消息数上限(未发送的+未确认的)
clientMaxCacheNum=300

# 清空发送缓存区的阈值(消息数)(当待发送的消息数到达该值时，立即发送，而不等待到下一帧)
# (同步RPC调用和返回也会立即刷新缓冲区)
# 该值等于0表示关闭缓冲区，异步消息也立即发送
flushThreshold=20

# http 请求超时时间(秒)，0表示不超时，建议大于0，默认15(这个值不具有什么参考价值)
httpRequestTimeout=15
# http session超时时间,默认15S。不要太大。 --- 为何在这一版加长时间了？因为变成异步了，另一个EventLoop什么时候处理完不确定
# 此外，它也是检查session是否超时的间隔
httpSessionTimeout=15